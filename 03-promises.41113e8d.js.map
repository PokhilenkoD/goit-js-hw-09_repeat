{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAKC,GAC1B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,EAAgBC,YAAW,KACHC,KAAKC,SAAW,GAEpCL,EAAQ,C,IAAEH,E,KAAKC,IAEfG,EAAO,C,IAAEJ,E,KAAKC,GAAO,GAEtBA,EAAK,G,CAIZ,MAAMQ,EAAOC,SAASC,cAAc,YACpCF,EAAKG,iBAAiB,UAGtB,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,OAAEA,EAAMC,MAAEA,EAAKC,KAAEA,GAezB,SAAyBJ,GACvB,MAAMK,EAAM,GACNC,EAAeN,EAAEO,OAAOC,SAE9B,IAAK,MAAMC,KAAOH,EAChB,GAAIA,EAAaI,eAAeD,IAC1BA,EAAIE,OAAS,EAAG,CAClB,MAAMC,EAAON,EAAaG,GAAKG,KACzBC,EAAeC,OAAOR,EAAaG,GAAKM,OAC9CV,EAAIO,GAAQC,C,CAIlB,OAAOR,C,CA5ByBW,CAAgBhB,GAChD,IAAK,IAAIiB,EAAI,EAAGC,EAAI,EAAGD,GAAKf,EAAQe,GAAK,EAAGC,GAAKd,EAC/ClB,EAAc+B,EAAGd,EAAQe,GACtBC,MAAK,EAAChC,IAAEA,EAAGC,KAAEA,MACZJ,EAAAoC,OAAOC,QAAQ,uBAAqBlC,QAAYC,MAAS,IAE1DkC,OAAM,EAACnC,IAAEA,EAAGC,KAAEA,MACbJ,EAAAoC,OAAOG,QAAQ,sBAAoBpC,QAAYC,MAAS,IAI9DQ,EAAK4B,O,IAfP,IAAIhC,EAAgB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(pos, time) {\n  return new Promise((resolve, reject) => {\n    setintervalId = setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ pos, time });\n      } else {\n        reject({ pos, time });\n      }\n    }, time);\n  });\n}\n\nconst form = document.querySelector('.js-form');\nform.addEventListener('submit', onSubmit);\nlet setintervalId = 0;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const { amount, delay, step } = formValueObject(e);\n  for (let i = 1, j = 0; i <= amount; i += 1, j += step) {\n    createPromise(i, delay + j)\n      .then(({ pos, time }) => {\n        Notify.success(`✅ Fulfilled promise ${pos} in ${time}ms`);\n      })\n      .catch(({ pos, time }) => {\n        Notify.failure(`❌ Rejected promise ${pos} in ${time}ms`);\n      });\n  }\n\n  form.reset();\n}\n\n// Обрабатывает форму и возвращает объект значений формы\nfunction formValueObject(e) {\n  const obj = {};\n  const objectValues = e.target.elements;\n\n  for (const key in objectValues) {\n    if (objectValues.hasOwnProperty(key)) {\n      if (key.length > 1) {\n        const name = objectValues[key].name;\n        const elementValue = Number(objectValues[key].value);\n        obj[name] = elementValue;\n      }\n    }\n  }\n  return obj;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","pos","time","Promise","resolve","reject","$47d4ff9957288465$var$setintervalId","setTimeout","Math","random","$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","preventDefault","amount","delay","step","obj","objectValues","target","elements","key","hasOwnProperty","length","name","elementValue","Number","value","$47d4ff9957288465$var$formValueObject","i","j","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.41113e8d.js.map"}